require 'open3'

WHITE_SPACES = " "
CONFIG_FOLDER_CENTOS = "/etc/sysconfig/network-scripts"
CONFIG_FOLDER_UBUNTU = "/etc/network/interfaces.d"

def bridges_to_persist()
    bridges = Hash.new

    stdin, stdout, stderr = Open3.popen3("brctl show")

    stdout.readlines.each do |line|
        fields = line.scan(/abiquo_\d+/)

        unless fields.empty?
            bridge_name = fields[0]
            bridges[bridge_name] = {:bridge => bridge_name, :tag => bridge_name.scan(/\d+/).first, :macs => []}
        end
    end

    bridges.each_pair do |bridge, atts|
        stdin, stdout, stderr = Open3.popen3("brctl showmacs #{bridge}")

        stdout.readlines.each do |line|
            if line.include? ":"
                case @dist
                when 'CentOS'
                    atts[:macs].push line.split(WHITE_SPACES)[1].upcase if line.include? ":"
                when 'Ubuntu'
                    atts[:macs].push line.split(WHITE_SPACES)[1] if line.include? ":"
                end
            end
        end

        bridges.delete(bridge) if atts[:macs].empty?
    end

    bridges.each_pair do |bridge, atts|
        stdin, stdout, stderr = Open3.popen3("ifconfig")

        stdout.readlines.each do |line|
            atts[:macs].each do |mac|
                atts[:vlan] = line.split(WHITE_SPACES)[0] if line.include? ".#{atts[:tag]}" and line.include? mac
            end
        end
        
        bridges.delete(bridge) unless atts.has_key? :vlan
    end
    
    return bridges
end

def centos_generate_bridge_file(bridge)
    open("#{CONFIG_FOLDER_CENTOS}/ifcfg-#{bridge}", "w") do |file|
        file.puts "# Autogenerated by Abiquo AIM"
        file.puts "DEVICE=#{bridge}"
        file.puts "TYPE=Bridge"
        file.puts "BOOTPROTO=none"
        file.puts "ONBOOT=yes"
    end
end

def centos_generate_vlan_file(vlan, bridge)
    open("#{CONFIG_FOLDER_CENTOS}/ifcfg-abiquo_#{vlan}", "w") do |file|
        file.puts "# Autogenerated by Abiquo AIM"
        file.puts "VLAN=yes"
        file.puts "DEVICE=#{vlan}"
        file.puts "BOOTPROTO=none"
        file.puts "ONBOOT=yes"
        file.puts "BRIDGE=#{bridge}"
    end
end

def ubuntu_generate_bridge_file(bridge, vlan)
    open("#{CONFIG_FOLDER_UBUNTU}/ifcfg-#{bridge}", "w") do |file|
        file.puts "# Autogenerated by Abiquo AIM"
        file.puts ""
        file.puts "auto #{bridge}"
        file.puts "iface #{bridge} inet manual"
        file.puts "    bridge_ports #{vlan}"
        file.puts "    bridge_stp on"
    end
end

def ubuntu_generate_vlan_file(vlan)
    open("#{CONFIG_FOLDER_UBUNTU}/abiquo_#{vlan}", "w") do |file|
        file.puts "# Autogenerated by Abiquo AIM"
        file.puts ""
        file.puts "auto #{vlan}"
        file.puts "iface #{vlan} inet manual"
    end
end

def detect_platform()
    stdin, stdout, stderr = Open3.popen3("cat /etc/issue")
    stdout.readlines.each do |line|
        dist = line.scan(/CentOS|Ubuntu/).first
        return dist
    end
end

# Detect the platform we are running in
@dist = detect_platform
raise "Unsupported linux distribution detected. Aborting." if @dist.nil?

case @dist
when 'CentOS'
    bridges_to_persist.each_value do |config|
        centos_generate_bridge_file config[:bridge]
        centos_generate_vlan_file config[:vlan], config[:bridge]
    end
when 'Ubuntu'
    bridges_to_persist.each_value do |config|
        ubuntu_generate_bridge_file config[:bridge], config[:vlan]
        ubuntu_generate_vlan_file config[:vlan]
    end
end
